/my-map-explorer
│
├── index.html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>My Interactive Map Explorer</title>
  <link rel="stylesheet" href="style.css" />
  <!-- ArcGIS Maps SDK CSS -->
  <link
    rel="stylesheet"
    href="https://js.arcgis.com/4.26/esri/themes/light/main.css"
  />
</head>
<body>
  <h1>My Interactive Map Explorer</h1>
  <div id="viewDiv" style="height: 600px;"></div>

  <script src="https://js.arcgis.com/4.26/"></script>
  <script src="main.js"></script>
</body>
</html>
├── style.css
body {
  font-family: Arial, sans-serif;
  margin: 10px;
}
└── main.js
require([
  "esri/Map",
  "esri/views/MapView",
  "esri/layers/FeatureLayer",
  "esri/widgets/Popup"
], function (Map, MapView, FeatureLayer, Popup) {
  // Create the map with a basemap
  const map = new Map({
    basemap: "streets-vector"
  });

  // Create a view
  const view = new MapView({
    container: "viewDiv",
    map: map,
    center: [-80.8431, 35.2271], // Charlotte approx lon/lat
    zoom: 11
  });

  // Add your NPAs layer from ArcGIS Online (replace URL with your hosted feature layer)
  const npaLayer = new FeatureLayer({
    url: "https://services1.arcgis.com/uCzmkROI93nvI5HX/arcgis/rest/services/Charlotte_Disparity_Ratio/FeatureServer"
  });

  map.add(npaLayer);

  // Popup template can be defined in ArcGIS Online layer or here for custom popups
  npaLayer.popupTemplate = {
    title: "{NPA_NAME}", // Adjust field name accordingly
    content: "{Description}" // Adjust or add more fields
  };

  // Optional: Zoom on click or do extra logic
  view.on("click", function (event) {
    view.hitTest(event).then(function (response) {
      const results = response.results;
      if (results.length > 0 && results[0].graphic.layer === npaLayer) {
        const graphic = results[0].graphic;
        view.popup.open({
          title: graphic.getAttribute("NPA_NAME"),
          content: graphic.getAttribute("Description"),
          location: event.mapPoint
        });
      }
    });
  });
});

